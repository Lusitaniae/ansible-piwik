- name: Define release id
  set_fact:
    PIWIK_RELEASE_ID: "{{ [ansible_date_time.year, ansible_date_time.month, ansible_date_time.day, ansible_date_time.hour, ansible_date_time.minute, ansible_date_time.second] | join('') }}"

- name: Download files
  get_url: url={{ piwik_download_path }} dest={{ app_path }}/tmp/piwik.zip checksum=sha256:{{ piwik_download_hash }}

- name: Create release folder
  file:
    path: "{{ deploy_path | default(app_path, true) }}/releases/{{ PIWIK_RELEASE_ID }}"
    owner: "{{ deploy_owner | default(app_user, true) }}"
    group: "{{ deploy_group | default(app_user, true) }}"
    state: directory

- name: Extract archive
  unarchive: src={{ app_path }}/tmp/piwik.zip dest={{ app_path }}/tmp

- name: Copy files to destiny
  command: mv {{ app_path }}/tmp/piwik {{ app_path }}/releases/{{ PIWIK_RELEASE_ID }}/

- name: Generate Piwik Database
  template:
    src: piwik_db_dump.sql.j2
    dest: "{{ deploy_path | default(app_path, true) }}/tmp/piwik_db_dump.sql"

- stat: path="{{ deploy_path | default(app_path, true) }}/.mysql_dump_imported"
  register: mysql_import_flag

- name: Import MySQL dump
  mysql_db: login_user={{ mysql_admin_user }} login_password={{ mysql_admin_pass }} login_host={{ mysql_host }} name={{ mysql_piwik_db }} state=import target="{{ deploy_path | default(app_path, true) }}/tmp/piwik_db_dump.sql"
  register: mysql_imported
  when: not mysql_import_flag.stat.exists

- name: Create import flag
  file: path="{{ deploy_path | default(app_path, true) }}/.mysql_dump_imported" state=touch
  when: mysql_imported.changed

- name: Link config file
  file:
    path: "{{ app_path }}/releases/{{ PIWIK_RELEASE_ID }}/piwik/config/config.ini.php"
    src: "{{ app_path }}/shared/config/config.ini.php"
    state: link
    force: yes

- name: Link current
  file:
    path: "{{ app_path }}/current"
    src: "{{ app_path }}/releases/{{ PIWIK_RELEASE_ID }}"
    state: link
    force: yes
  notify:
    - restart nginx

- name: Cleanup
  shell: "ls -dt {{ app_path }}/releases/* | egrep '[0-9]+' | tail -n +6 | xargs rm -rfv"
  register: deploy_cleanup_result
  changed_when: "'removed' in deploy_cleanup_result.stdout"
  sudo: yes
  sudo_user: root
